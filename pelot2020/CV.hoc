// Created by Brandon Thio 7 February 2018
// create c-fibers based upon literature defined models
// set these parameters in MATLAB:
//		tstop, len, D, segdensity, type, initialdel, dura
load_file("cFiberBuilder.hoc")
load_file("balanceTigerholm.hoc")
objref fiber, f
objectvar stim,stim2
strdef name
proc stimulate(){
// Bring the voltages to steady state
	dtsav = dt						// Store value of dt for later
	dt = dt_initSS					// Set dt to large dt to speed simulation in initialization phase
	t = -inittime
	while (t <= -dt) {		// Advance until t = 0
		// print(v)
		fadvance()
	}
	dt = dtsav						// Reset dt to simulation dt
	t = 0							// Set t to 0, but with initialized values
	fcurrent()						// Sets all currents and other assigned values in accordance with current values of state variables.
// Run the simulation	
	first=0
	past=-100
	while (t<tstop){		       	   		 // Simulation Loop starts here
		sec=0
		forsec fiber.sl{
			if(t<0.2 && sec == 2 ){
				v = 0
			}
			if(sec==int(fiber.nsegments/4) && v>-20 && t1==0){
				t1=t// time of ap at 0.25 down fiber which is 1.25mm down
				
			}
			if(sec==int(fiber.nsegments/4*3) && v>-20 && t2==0){
				t2=t// time of ap at 0.75 down fiber which is 3.75mm down
			}
			if(sec==int(fiber.nsegments/2)){
				f.printf("%f\n",v)
			}
			
			sec=sec+1
		}
		fadvance()	      	 	// Advance simulation one time step	    
	}
}
proc run_nrn_script(){
//////////////////// VARIABLES /////////////////////
celsius = 37
dt_initSS = 1
inittime = 1000
///////////////// Create Fibers ///////////////////////
if(type==4){
	fiber = new cFiberBuilder(D,len,type,celsius,50/6,1,1)
	// parameters diameter, length, type, temp, segment density, insert97na flag, conductnaces97 flag
	// flags = 1 if you want them in your fiber
	// type 1:Sundt 2:Tigerholm 3:Rattay 4:Sundt
}else{
	if(type==5){
		fiber = new cFiberBuilder(D,len,4,celsius,50/6,0,0)
	}else{
		fiber = new cFiberBuilder(D,len,type,celsius)
	// parameters diameter, length, type, temp
	// type 1:Sundt 2:Tigerholm 3:Rattay 4:Sundt
	}
}
///////////////////////// STIMULATE AXON /////////////////////
v_init=fiber.v
Vrest = v_init
t=0	     			    // Set time variable (t) to zero
dt = 0.005			    // Time step in msec

finitialize(v_init)
fcurrent()
if(type==2){
	balance()
}
fire=0
sprint(name,"VoltageTrace/c_fiber_%d_D_%d_Type_%d.dat",D*1000,type,ParticleID)
f=new File()
f.wopen(name)

stimulate()
f.close()
//////////////////// Print Threshold to File //////////////////
CV=len/(2000*(t2-t1))
sprint(name,"CV/c_fiber_CV_%d_D_%d_Type_%d.dat",D*1000,type,ParticleID)
f=new File()
f.wopen(name)
f.printf("%f",CV)
// f.printf("%f",high)
f.close()
}




